name: Deploy work flow for Amazon ECS

on:
  pull_request:
    branches:
      - main
    types: [closed]

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ap-northeast-1
  ECS_WEB_SERVICE: aws-infra-ecs-service2
  NGINX_CONTAINER_NAME: ecs-nginx
  LARAVEL_CONTAINER_NAME: ecs-laravel
  NGINX_TAG: 1.0.1
  LARAVEL_TAG: 1.0.1

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-region: ${{ env.AWS_REGION }}
        role-to-assume: 'arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.IAM_ROLE_ARN }}'
        
    - name: Login to ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: nginx push to ECR
      id: build-image-nginx
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker build -t $ECR_REGISTRY/$NGINX_CONTAINER_NAME:$NGINX_TAG -f ./docker/proc/web/Dockerfile .
        docker tag $ECR_REGISTRY/$NGINX_CONTAINER_NAME:$NGINX_TAG $ECR_REGISTRY/$NGINX_CONTAINER_NAME:latest
        docker push $ECR_REGISTRY/$NGINX_CONTAINER_NAME:$NGINX_TAG
        docker push $ECR_REGISTRY/$NGINX_CONTAINER_NAME:latest

    - name: laravel push to ECR
      id: build-image-laravel
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker build -t $ECR_REGISTRY/$LARAVEL_CONTAINER_NAME:$LARAVEL_TAG -f ./docker/proc/app/Dockerfile .
        docker tag $ECR_REGISTRY/$LARAVEL_CONTAINER_NAME:$LARAVEL_TAG $ECR_REGISTRY/$LARAVEL_CONTAINER_NAME:latest
        docker push $ECR_REGISTRY/$LARAVEL_CONTAINER_NAME:$LARAVEL_TAG
        docker push $ECR_REGISTRY/$LARAVEL_CONTAINER_NAME:latest


