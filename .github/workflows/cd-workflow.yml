name: Deploy work flow for Amazon ECS

on:
  pull_request:
    branches:
      - main
    types: [closed]

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ap-northeast-1
  ECS_WEB_SERVICE: aws-infra-ecs-service2
  ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-northeast-1.amazonaws.com
  ECR_NGINX_REPOSITORY: ecs-nginx
  ECR_LARAVEL_REPOSITORY: ecs-laravel

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up Dockder Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache docker
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ github.ref }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ github.ref }}-buildx-

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-region: ${{ env.AWS_REGION }}
        role-to-assume: 'arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.IAM_ROLE_ARN }}'
        
    - name: Login to ECR
      id: login-ecr
      uses: docker/login-action@v2
      with:
        registry: ${{ env.ECR_REGISTRY }}

    - name: nginx push to ECR
      uses: docker/build-push-action@v3
      with:
        provenance: false
        push: true
        file: ./docker/proc/web/Dockerfile
        tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_NGINX_REPOSITORY }}:${{ github.sha }},${{ env.ECR_REGISTRY }}/${{ env.ECR_NGINX_REPOSITORY }}:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: laravel push to ECR
      uses: docker/build-push-action@v3
      with:
        provenance: false
        push: true
        file: ./docker/proc/app/Dockerfile
        tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_LARAVEL_REPOSITORY }}:${{ github.sha }},${{ env.ECR_REGISTRY }}/${{ env.ECR_LARAVEL_REPOSITORY }}:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: Move cache
      run: |
         rm -rf /tmp/.buildx-cache
         mv /tmp/.buildx-cache-new /tmp/.buildx-cache


