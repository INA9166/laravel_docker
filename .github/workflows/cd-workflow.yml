name: Deploy work flow for Amazon ECS

on:
  pull_request:
    branches:
      - main
    types: [closed]

env:
  AWS_REGION: ap-northeast-1
  ECS_WEB_SERVICE: aws-infra-ecs-service2
  NGINX_CONTAINER_NAME: ecs-nginx
  LARAVEL_CONTAINER_NAME: ecs-laravel
  NGINX_TAG: 1.0.1
  LARAVEL_TAG: 1.0.1

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest
    timeout-minutes: 30
    permissions:
      id-token: write
      contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: ${{ env.AWS_REGION }}
        role-to-assume: ${{ secrets.IAM_ROLE_ARN }}

    - name: Login to ECR
      uses: docker/login-action@v1
      env:
        ECR_REGISTRY: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
      with:
        registry: ${{ env.ECR_REGISTRY }}

    - name: nginx push to ECR
      id: build-image-nginx
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker build -t $ECR_REGISTRY/$NGINX_CONTAINER_NAME:$NGINX_TAG -f ./docker/proc/web/Dockerfile .
        docker tag $ECR_REGISTRY/$NGINX_CONTAINER_NAME:$NGINX_TAG $ECR_REGISTRY/$NGINX_CONTAINER_NAME:latest
        docker push $ECR_REGISTRY/$NGINX_CONTAINER_NAME:$NGINX_TAG
        docker push $ECR_REGISTRY/$NGINX_CONTAINER_NAME:latest

    - name: laravel push to ECR
      id: build-image-laravel
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        docker build -t $ECR_REGISTRY/$LARAVEL_CONTAINER_NAME:$LARAVEL_TAG -f ./docker/proc/app/Dockerfile .
        docker tag $ECR_REGISTRY/$LARAVEL_CONTAINER_NAME:$LARAVEL_TAG $ECR_REGISTRY/$LARAVEL_CONTAINER_NAME:latest
        docker push $ECR_REGISTRY/$LARAVEL_CONTAINER_NAME:$LARAVEL_TAG
        docker push $ECR_REGISTRY/$LARAVEL_CONTAINER_NAME:latest

    - name: Deploy to ECS
      run: |
        aws ecs update-service --service $ECS_WEB_SERVICE --cluster aws-infra-ecs-cluster --force-new-deployment

