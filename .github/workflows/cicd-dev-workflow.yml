name: cicd work flow for Develop Amazon ECS

on:
  pull_request:
    branches:
      - develop
    types: [closed]

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION: ap-northeast-1
  ECS_WEB_SERVICE: aws-infra-ecs-service2 
  ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.ap-northeast-1.amazonaws.com
  ECR_NGINX_REPOSITORY: dev-web
  ECR_LARAVEL_REPOSITORY: dev-app

jobs:
  larastan:
    name: static analysis
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v3

      - name: Install PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Install dependencies
        run: |
          cd ./src/laravel
          composer install --dev

      - name: Run Larastan
        run: |
          cd ./src/laravel
          ./vendor/bin/phpstan analyse --memory-limit=2G --configuration=phpstan.neon

  deploy:
    needs: larastan
    name: deploy
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set current datetime as env variable
      env:
        TZ: 'Asia/Tokyo'
      run: echo "CURRENT_DATETIME=$(date +'%Y-%m-%d-%H-%M')" >> $GITHUB_ENV

    - name: Set up Dockder Buildx
      uses: docker/setup-buildx-action@v2

    - name: Cache docker
      uses: actions/cache@v3
      with:
        path: /tmp/.buildx-cache
        key: ${{ github.ref }}-buildx-${{ env.CURRENT_DATETIME }}
        restore-keys: |
          ${{ github.ref }}-buildx-

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1-node16
      with:
        aws-region: ${{ env.AWS_REGION }}
        role-to-assume: 'arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.IAM_ROLE_ARN }}'
        
    - name: Login to ECR
      id: login-ecr
      uses: docker/login-action@v2
      with:
        registry: ${{ env.ECR_REGISTRY }}

    - name: nginx build
      uses: docker/build-push-action@v4
      with:
        provenance: false
        push: false
        load: true
        file: ./docker/prod/web/Dockerfile
        tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_NGINX_REPOSITORY }}:${{ env.CURRENT_DATETIME }},${{ env.ECR_REGISTRY }}/${{ env.ECR_NGINX_REPOSITORY }}:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: nginx dockle
      uses: erzz/dockle-action@v1
      with:
        image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_NGINX_REPOSITORY }}:latest
        exit-code: 1
        failure-threshold: fatal
        accept-keywords: NGINX_GPGKEY,NGINX_GPGKEY_PATH

    - name: nginx push to ECR
      run: |
        docker push -a ${{ env.ECR_REGISTRY }}/${{ env.ECR_NGINX_REPOSITORY }}

    - name: laravel build
      uses: docker/build-push-action@v4
      with:
        provenance: false
        push: false
        load: true
        file: ./docker/prod/app/Dockerfile
        tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_LARAVEL_REPOSITORY }}:${{ env.CURRENT_DATETIME }},${{ env.ECR_REGISTRY }}/${{ env.ECR_LARAVEL_REPOSITORY }}:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

    - name: laravel dockle
      uses: erzz/dockle-action@v1
      with:
        image: ${{ env.ECR_REGISTRY }}/${{ env.ECR_LARAVEL_REPOSITORY }}:latest
        exit-code: 1
        failure-threshold: fatal

    - name: laravel push to ECR
      run: |
        docker push -a ${{ env.ECR_REGISTRY }}/${{ env.ECR_LARAVEL_REPOSITORY }}

    - name: Move cache
      run: |
         rm -rf /tmp/.buildx-cache
         mv /tmp/.buildx-cache-new /tmp/.buildx-cache


